version: '3.8'

services:
  db:
    container_name: db
    image: postgres:alpine
    restart: unless-stopped
    networks:
      default:
    environment:
      POSTGRES_DB: rinha
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/db.sql
      - ./postgresql.conf:/docker-entrypoint-initdb.d/postgresql.config
    command: postgres -c config_file=/docker-entrypoint-initdb.d/postgresql.config
    deploy:
      resources:
        limits:
          cpus: "0.55"
          memory: "450MB"

  api01: &api
    container_name: api01
    image: marcioluzjr/rinha_api:v1
    restart: unless-stopped
    networks:
      default:
    depends_on:
      - db  # Wait for db service to be ready 
    deploy:
      resources:
        limits:
          cpus: "0.55"
          memory: "25MB"

  api02:
    <<: *api
    container_name: api02
    networks:
      default:
    depends_on:
      - db  # Wait for db service to be ready 

  nginx:
    container_name: nginx
    image: nginx:latest
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9999:9999"
    networks:
      default:
    depends_on:
      - api01  # Wait for api01 to be ready
      - api02  # Wait for api02 to be ready
    deploy:
      resources:
        limits:
          cpus: "0.35"
          memory: "50MB"

#   # tester:
#   #   image: debian:latest
#   #   command: ["/bin/bash", "-c", "apt-get update && apt-get install -y wget && apt-get install -y iputils-ping && apt-get install -y curl && apt-get install -y nmap && apt-get clean && exec bash"]
#   #   networks:
#   #     default: 
#   #   stdin_open: true
#   #   tty: true
#   #   restart: unless-stopped

networks:
  default:
    driver: bridge
